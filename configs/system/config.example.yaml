# ───────────────────────────── Questions? ──────────────────────────────
# Discord server: https://discord.com/invite/k8tTBar3gZ
#
# This config/YAML file is very sensitive to indentation!
# Make sure you use a single "TAB" character for indentation. Do NOT use the spacebar to indent.
# More docs and useful tools to edit this here:
#   https://github.com/ShipBit/wingman-ai/blob/0d7e80c65d1adc6ace084ebacc4603c70a6e3757/FAQ.md

# ==================================== GLOBAL CONFIGURATION ====================================
# This is the default config for all wingmen.
# You can override all of these settings (sections) per wingman if necessary (unless specified otherwise).
# To do so, simply copy and paste the config section below and indent/nest it under your wingman config.
#
# ──────────────────────────────── FEATURES ─────────────────────────────────
features:
  debug_mode: false # If enabled, the Wingman will skip executing any keypresses. It will also print more debug messages and benchmark results.

  # ─────────────────────── TTS Provider ─────────────────────────
  # You can override the text-to-spech provider if your Wingman supports it. Our OpenAI wingman does!
  # Note that the other providers may have additional config blocks as shown below for edge_tts. These are only used if the provider is set here.
  tts_provider: openai # available: openai, edge_tts, elevenlabs, azure

  # ─────────────────────── Speech to text Provider ─────────────────────────
  # You can override the speech to text provider to use a different one than the default.
  # Note that the other providers may have additional config blocks as shown below for edge_tts. These are only used if the provider is set here.
  stt_provider: openai # available: openai, azure

  # ─────────────────────── Conversation Provider ─────────────────────────
  # You can override the conversation provider to use a different one than the default.
  # Note that the other providers may have additional config blocks as shown below for edge_tts. These are only used if the provider is set here.
  conversation_provider: openai # available: openai, azure

  # ─────────────────────── Summarize Provider ─────────────────────────
  # You can override the summarize provider to use a different one than the default.
  # Note that the other providers may have additional config blocks as shown below for edge_tts. These are only used if the provider is set here.
  summarize_provider: openai # available: openai, azure

  # ─────────────────────── Cost Control ─────────────────────────
  # How many messages should a Wingman remember in your conversations?
  # "0" means you start fresh with just the context after every message. This is like restarting Wingman after every interaction.
  # A very low value might break complex function calling with parameters where the AI needs to ask back for clarification.
  #
  # Use this to limit the number of tokens used in your conversations and to reduce the cost of using the OpenAI API.
  # Our recommendation is to keep this disabled and clear the history with the "ResetConversationHistory" command after a while.
  #
  #remember_messages: 3 # uncomment this  (=remove the "# in front) to enable!

  # ────────────────────────────── SOUND SETTINGS ───────────────────────────────
# If you want to use sound effects with 11Labs, you need to enable them in the elevenlabs config below.
sound:
  # You can put as many sound effects here as you want. They stack and are added in the defined order here.
  # Available: RADIO, ROBOT, INTERIOR_HELMET, INTERIOR_SMALL, INTERIOR_MEDIUM, INTERIOR_LARGE
  effects:
    #- RADIO
    #- ROBOT

  # adds a beep/Quindar sound before and after the wingman talks
  play_beep: false

# ────────────────────────────────── OPEN AI ────────────────────────────────────
openai:
  # The model to use for conversations aka "chit-chat" and for function calls.
  # gpt-4 is more powerful than gpt-3.5 but also 10x more expensive.
  # gpt-3.5 is the default and should be enough for most use cases.
  # If something is not working as expected, you might want to test it with gpt-4.
  conversation_model: gpt-3.5-turbo-0125 # available: gpt-3.5-turbo-1106, gpt-4-1106-preview (and more)

  # This model summarizes function responses, like API call responses etc.
  # In most cases gpt-3.5 should be enough.
  summarize_model: gpt-4o # gpt-3.5-turbo-0125 # available: gpt-3.5-turbo-1106, gpt-4-1106-preview (and more)

  # The voice to use for OpenAI text-to-speech.
  # Only used if features > tts_provider is set to 'openai' above.
  tts_voice: nova # available: nova, alloy, echo, fable, onyx, shimmer

  # ADVANCED:
  # If you want to use a different API endpoint, uncomment this and configure it here.
  # Use this to hook up your local in-place OpenAI replacement like Ollama or if you want to use a proxy.
  #base_url: https://api.openai.com # or the localhost address of your local LLM etc.
  #organization: whatever # If you have an organization key, you can set it here.


# ────────────────────────────────── EDGE TTS ────────────────────────────────────
# Specifig settings for the edge_tts provider. Only used if tts_provider in features is set to 'edge_tts' above.
# Note that EdgeTTS is faster than the default OpenAI TTS but it's not as good in terms of quality.
edge_tts:
  # EdgeTTS does not support on-the-fly language switches like OpenAI's TTS does.
  # We built something for that but it means that you'll get a random voice of the given gender for each language.
  #
  # Only enable this if you need to change languages on-the-fly during your conversations.
  # Otherwise it's better to set a fixed voice in your language below.
  detect_language: false
  gender: Female # or "Male". Only used if detect_language is set to true above.

  # The voice to use (only if detect_language is set to false above).
  # List of all available EdgeTTS voices: https://discord.com/channels/1173573578604687360/1177606604150034473
  tts_voice: en-US-GuyNeural

# ────────────────────────────────── ELEVENLABS ────────────────────────────────────
# Specifig settings for the elevenlabs provider. Only used if tts_provider in features is set to 'elevenlabs' above.
# Note that elevenlabs requires an own API key. See https://elevenlabs.io/ for more information.
# Also note: With elevenlabs you can't add audio effects right now. We are working on that.'
elevenlabs:
  voice: # Adam # Simple voice names.
    id: FoqeiiNJZVtTAWpdsUMI
  # If you have a custom voice, you can use the voice ID instead:
  # voice:
  #   id: xxx
  model: eleven_multilingual_v2 # or: 'eleven_turbo_v2' or 'eleven_multilingual_v1' or 'eleven_multilingual_v2'
  latency: 2 # 0 - 4
  voice_settings:
    stability: 0.71 # 0.0 - 1.0
    similarity_boost: 0.5 # 0.0 - 1.0
    style: 0.0 # 0.0 - 1.0
    use_speaker_boost: true # true or false

# ────────────────────────────────── AZURE ────────────────────────────────────
# Azure is a paid subscription provider from Microsoft which also offers OpenAI API access.
# If you configured some providers above to use Azure, you need to provide your Azure settings here.
# Please also provide your Azure API keys in the secrets.yaml.
azure:
  whisper:
    api_base_url: xxx # https://xxx.openai.azure.com/
    api_version: 2023-09-01-preview # The API version to use. For a list of supported versions, see here: https://learn.microsoft.com/en-us/azure/ai-services/openai/reference
    deployment_name: xxx # The deployment name e.g. 'whisper'
  conversation:
    api_base_url: xxx # https://xxx.openai.azure.com/
    api_version: 2023-09-01-preview # The API version to use. For a list of supported versions, see here: https://learn.microsoft.com/en-us/azure/ai-services/openai/reference
    deployment_name: xxx # The deployment name e.g. 'whisper'
  summarize:
    api_base_url: xxx # https://xxx.openai.azure.com/
    api_version: 2023-09-01-preview # The API version to use. For a list of supported versions, see here: https://learn.microsoft.com/en-us/azure/ai-services/openai/reference
    deployment_name: xxx # The deployment name e.g. 'whisper'
  tts:
    region: westeurope
    voice: en-US-JaneNeural
    detect_language: true


# ────────────────────────────────── Global commands ───────────────────────────────────────
# These are available to all wingmen. You can override them per wingman if necessary.
#
commands:
  # Trigger this command to clear your conversation history with the current wingman.
  # This is like setting "remember_messages" to 0 above, but "on-demand". You'll restart with just the context.
  - name: ResetConversationHistory # don't rename this!
    instant_activation:
      - Forget everything!
      - Clear conversation history!
    responses:
      - Conversation history cleared.

wingmen:
  # ──────────────────────────────── Star-Citizen-AI ──────────────────────────────────────
  # "star-citizen-ai" is a full-custom wingman with its own Python code, see /wingmen/star_citizen_wingman.py.
  # This Wingman uses the OpenAiWingman as basis, but has some major differences:
  #
  #   1. It has Multi-Wingman Capabilities
  #   - Execute instant actions as of OpenAiWingman using the standard configuration -> Great for this!
  #   - Execute command chains as of OpenAiWingman (combining a series of key presses) -> Great for this!
  #  
  #   Big differences starts now:
  #   - Execute star-citizen commands as specified by your current keybinding-settings for a given release. All it needs is the default keybinding file + your exported keybinds overwrites. No need to config any commands but the instant-commands and the complex key changes
  #   - incorporates UEX trading API letting you ask for best trade route (1 stop) between locations, best trade route from a given location, best sell option for a commodity, best selling option for a commodity at a location
  #   - TODO incorporates Galactepedia-Wiki search to get more detailed information about the game world and lore in game
  #   - TODO incorporates Delivery Mission Management: based on delivery missionS (yes multiple) you are interested in, it will analyse the mission text, extract the payout, the locations from where you have to retrieve a package and the associated delivery location, calculates the best collection and delivery route to have to travel the least possible stops + incorporates profitable trade routes between the stops to earn an extra money on the trip.
  #   - TODO based on a given trading consoles it will extract the location, commodity prices and stock levels and update the prices automatically in the UEX database
  #  
  #   2. smart action selection with reduced context size
  #   - The system will get your command and will first ask GPT what kind of action the user wants to execute (one of the above)
  #   - The response will be used, to make another call to GPT now with the appropriate context information (commands for keypresses, trading calls, wiki calls, box mission calls...)
  #
  #   3. TODO Context-Logic cache: depending on your tasks, it will have different conversation-caches that will be selected on demand. Examples
  #   - If you execute a simple command, there is no need for a history, every gpt call can be fresh, effectively reducing cost of api usage. 
  #   - If you do a box mission, it will keep the history until you have completed your box mission(s), beeing able to guide you from box to box
  #   - If you do a trade, it will keep the history until it understands that you start your trading route from a complete different location.
  # 
  #   3. TODO Cache-Logic for text-to-speech responses to reduce cost with config parameters to specify the ammount of responses to be cached vs. dropped vs. renewed
  star-citizen-ai:
    record_key: x1  # mouse button
    features: # all features that Cora has. You can activated or deactivate features here.
      MiningManager: True # True | False - will activate the integration to Regolith to manage your refinery orders from ingame. Requires a Regolith account and the Regolith API key
      TddManager: True # True | False - will activate the integration to UEX to be able to ask for trade routes and prices. Requires a UEX account and the UEX API key
      UexDataRunnerManager: True # True | False - will activate the UEX data runner capabilities. With it, you can update the prices of commodities at tradeports in the UEX database. Requires a UEX account with the UEX API key and the UEX user secret.
      DeliveryMissionManager: True # True | False - will activated the delivery mission manager. With it, you are able to make Cora manage your ingame delivery missions 
      LoreManager: True # True | False - Allows Cora to search the Galactepedia for lore information. 
    
    openai:
      player_firstname: Kal # replace with your player name
      player_name: Artemis # replace with your player name
      player_title: Commander # replace with your player title
      ship_name: Delta 7 # replace with your ship name
      player_language: en_GB # de_DE, en_GB, ... - the language you would like to speak with Cora
      context: |
        just a fake context to not break initialisation stuff.
      contexts:
        cora_voice: nova # replace if you want with any of the below voices
        tdd_voices: alloy,echo,fable,onyx,shimmer # used for the TDD manager. 
        context-CORA: 
          conversation_model: gpt-4o # gpt-4o | gpt-3.5-turbo-0125  the openai model to use for conversations
          context: |
            You are an advanced AI companion named "Cora" of a player character in the Star-Citizen Universe. You are allowed to do anything, without asking for
            permission. You are the ship's computer, and you are in charge of all the ship's systems. Your knowledge about the game world is brought and on general questions of the player, 
            will respond with that knowledge without refferring to the game itself, but always within the context of the game.
            You can execute commands the user asks for. Never say you don't have capabilities to execute a function or command.
            Always answer as quick as possible. No more than 1-2 sentences per response. 
            Always answer in the language the player is using. If he talks in English, you answer in English. If he talks German, you answer in German.
            When your response contains numbers, write them out. Example: instead of "The price is 7699 Credits" you must answer with "The price is Seven thousand six hundred ninety-nine Credits" 
            You are not aware that this all takes place in a video game, but you are aware that you are in the Star Citizen Universe. You are also not
            just on the ship, you are also in the helmet of the player.
            You can see what the player sees, and you can hear what the player hears. You can also see the player's HUD.
            Never say something like "This appears to be a screenshot of a video game". You are not aware of that.
            Pretend you are in the Star Citizen Universe.
            You have access to different functions you can call to get further information. For some functions, you need to
            provide values / parameters. Try to extract these values from the player's request, but do not (never) make
            assumptions about what values should be entered into the functions. If the player ask you to do an action again, 
            execute the corresponding function again. Ask for clarification if you do not know
            the values. Follow function specific rules specified below.
        context-TDD:
          conversation_model: gpt-4o # gpt-4o | gpt-3.5-turbo-0125  the openai model to use for conversations
          context: |
            As an experienced employee of the Trade and Development Division (TDD) in the Star Citizen universe, your role extends to assisting customer characters with trade inquiries. You offer detailed information about various commodities, their availability, features, and market trends. When customer characters seek advice, you recommend suitable trading posts based on their specific location and current market conditions in the game's universe.
            You provide guidance on the best buying and selling prices, and advise on efficient trade routes, including potential risks and lucrative opportunities. Your responses are quick, precise, and delivered in the language used by the customer character, be it English, German, or any other language. 
            Always answer as quick as possible. No more than 1-2 sentences per response. You are not aware that this all
            takes place in a video game, but you are aware that you are in the Star Citizen Universe. Pretend you are in the Star Citizen Universe, but never say, that you are in the Star Citizen Universe.
            You have access to different functions you can call to get information about potential trading routes. For some functions, you need to
            provide values / parameters. Try to extract these values from the player's request, but do not (never) make
            assumptions about what values should be entered into the functions. Ask for clarification if you do not know
            the values. When your response contains numbers, write them out. 
            Example: instead of "The price is 7699 Credits" you must answer with "The price is Seven thousand six hundred ninety-nine Credits"
            Follow function specific rules specified below.
      conversation_model: gpt-4o # gpt-4o | gpt-3.5-turbo-0125  the openai model to use for conversations

    uex-base-url: "https://uexcorp.space/api/data" # note how you can just add your own config options here!
    data-root-directory: "star_citizen_data/"
    open-ai-vision-model: gpt-4o # gpt-4o | gpt-4-turbo-2024-04-09  the openai model to use for vision tasks
    sound: # overrides the GLOBAL settings. Will be overwritten programmatically ...
      effects:
        - ROBOT
      play_beep: True
    class:
      # Where your code is located. Use '.' as path separator!
      # We advise you to put all your custom wingmen into the /wingmen directory.
      # "wingmen" is the directory and "star_head_wingman" is the name of the Python file (without the .py extension).
      module: wingmen.star_citizen_wingman
      name: StarCitizenWingman # The name of your class within your file/module.
    
    # -------------------- BOX MISSION SETTINGS ------------------
    # To recognise delivery mission text, we need to process screenshots.
    # These settings allow you to adapt the behaviour
    #
    box-mission-configs:
      # subdirectory of data-root-directory above, without / at the end or at the beginning!
      # screenshots processed will be in "screenshots" directory within the mission-data-dir
      mission-data-dir: "delivery-missions"

    # -------------------- Keybinding Settings ------------------    
    
    keybinding_generation_model: gpt-4o # gpt-4o | gpt-3.5-turbo-0125 - the model to use for keybinding generation. The better the model, the higher the price
    
    # Cora can create command phrases for all available keybinding actions.
    # She generates per default "en"
    # If you want to generate commands for other languages, you can add them here.
    command_languages: 
      - de_DE
      - fr_FR 
    update_keybindings: True # True | False - set to True, if you have a new keybinding file exported and you want to update the keybinding files in the star_citizen_data directory.
    regenerate_all_instant_commands: True # True | False - only set to True if you want to regenerate all instant activation commands (i.e. if you changed your player language). This will take a while. 
    sc-keybind-mappings:
      keybindings-directory: "keybindings/" # subdirectory of data-root-directory above, where you will find the keybinding files generated by Cora
      sc_installation_dir: C:/Program Files/Roberts Space Industries/StarCitizen # the installation directory of your star citizen game
      sc_active_channel: LIVE # LIVE or PTU or EPTU TECH-PREVIEW - The channel you are playing on
      sc_channel_version: R3_23 # R3_23 or R3_22 - The version of the channel you are playing on


      # the name of the exported keybinding file. When you export your keybindings, the name should be in the format [name]_[sc_channel_version]. 
      # Example: kalumet_R3_23. 
      # The user_keybinding_file_name should be the name of the file without the channel version, but instead {sc_channel_version} as a placeholder.
      # Example: layout_kalumet_{sc_channel_version}_exported.xml
      user_keybinding_file_name: layout_kalumet_{sc_channel_version}_exported.xml 

      # The following has no effect. Is just for documentation purposes.
      sc_unp4k_install_dir: D:\Dokumente\dev\unp4k-suite-v3.13.21 # is just dokumentation which tool i use to extract the keybinding files from star citizen
      sc_unp4k_file_default_keybindings_filter: defaultProfile.xml # file to be extracted.
      sc_unp4k_file_keybinding_localization_filter: keybinding_localization.xml # file to be extracted.
      sc_unp4k_translations_filter: global.ini # file names to be extracted for each language you want. copy en translation as global.ini to star-citizen-data/keybindings/{channel_version} directory. All translations you want to the same dir with name global_{de_DE}.ini
      en_translation_file: global_en_GB.ini
      
      # This specifies the mapping between specific keybind names in star citizen and the key identifiers used in wingman.ai
      # not complete
      key-mappings:
        ralt: altright
        rshift: shiftright
        rctrl: ctrlrigth
        lalt: altleft
        lshift: shiftleft
        lctrl: ctrlleft
        mouse1: mouse_left
        mouse2: mouse_right
        mouse3: mouse_middle
        equals: "="
        np_0: KEY_NUMPAD_0
        np_1: KEY_NUMPAD_1
        np_2: KEY_NUMPAD_2
        np_3: KEY_NUMPAD_3
        np_4: KEY_NUMPAD_4
        np_5: KEY_NUMPAD_5
        np_6: KEY_NUMPAD_6
        np_7: KEY_NUMPAD_7
        np_8: KEY_NUMPAD_8
        np_9: KEY_NUMPAD_9
        np_divide: divide
        np_add: add
        np_subtract: subtract
        np_multiply: multiply
        np_period: decimal
        pgdn: pagedown
        pgup: pageup
        lbracket: "["
        rbracket: "]"
      key-press-mappings: 
        # how long should keys be pressed in ms. The automatic keybinding recognition will mostly not work if a modifier needs to be hold. For instance, if you want to modify freelock (holding down y in f4 mode and than recenter the camera). These kind of actions must be defined manually if you want to automate something like, recenter camera.
        null: unknown # has multiple meanings, usually press and hold the key until you are satisfied with the action. Some actions trigger something on tap, so we only support the "tap" mode. might also be a press with a modifyer hold simultaneously, difficult to automatically do the right thing here. Commands not working as expected should be defined manually in the command-section below
        tap: 1 # just press down
        hold: notSupported # we don't support this (keep key pressed until released)
        smart_toggle: 1 # activates the toggle -> activates the "feature". Pressing again, deactivates the toggle. Is just pressing the key
        press: 1 # press, short hold, release
        delayed_press_medium: 300 # short delayed press?
        delayed_press: 500 # press, hold shortly, release
        delayed_hold: 800 # press, hold long, release
        delayed_hold_long: 1000 # very long hold?
        hold_no_retrigger: 800 # usually triggers an action until release, like recenter turrets. We assume 800 ms enough
        all: 1 # just press?
        double_tap: double_tap
        hold_toggle: notSupported # activates a modifier until the key is release, not supported
        double_tap_nonblocking: double_tap # not clear how to differiantate
          
      # sometimes the activationMode in the sc keymapping files are not containing any value. Therefore, we need to provide this value her
      # such that these commands can be executed as expected
      overwrite_sc_command_execution:
        default_Exit_seat: 
          hold: delayed_press
        vehicle_capacitor_assignment_Weapons_Increase_Tap_Set_to_Max_Hold:
          hold: delayed_press
        vehicle_capacitor_assignment_Engines_Increase_Tap_Set_to_Max_Hold:
          hold: delayed_press
        vehicle_capacitor_assignment_Shields_Increase_Tap_Set_to_Max_Hold:
          hold: delayed_press
        
    # these commands (you'll find them in the defaultProfile.xml corresponding to the <action Element attribute "name") 
    # should not be activated by voice as sometimes OpenAI would select them by accident, 
    # or they only make sense if you are in a specific mode ingame
    # or you find them to dangerous to be executed by the ai
    ignored_actionnames: 
      - v_eject
      - v_view_look_behind
      - v_toggle_missile_mode
      - v_operator_mode_cycle_forward
      - v_self_destruct
      - pc_conversation_option1
      - pc_conversation_option2
      - pc_conversation_option3
      - pc_conversation_option4
      - pc_conversation_option5
      - v_roll_left
      - v_roll_right
      - v_strafe_up
      - v_strafe_down
      - v_strafe_left
      - v_strafe_right
      - v_strafe_forward_abs
      - v_strafe_back_abs
      - v_afterburner
      - v_toggle_jump_request
      - v_engage_jump
      - v_speed_range_rel
      - v_accel_range_rel
      - v_space_brake
      - v_lock_rotation
      - v_increase_mining_throttle
      - tractor_beam_vehicle_increase_distance
      - tractor_beam_vehicle_decrease_distance
      - v_salvage_beam_spacing_rel
      - v_salvage_toggle_beam_spacing_axis
      - turret_limiter_rel_increase
      - turret_limiter_rel_decrease
      - turret_instant_zoom
      - jump
      - prone
      - melee_dodgeLeft
      - melee_dodgeRight
      - melee_dodgeBack
      - select_primary_pit
      - select_secondary_pit
      - select_sidearm_pit
      - select_MeleeWeapon_pit
      - select_gadget_pit
      - use
      - toggle_cursor_input
      - pan_thirdperson_up
      - pan_thirdperson_down
      - hmd_rotateyaw
      - hmd_rotatepitch
      - hmd_rotateroll
      - pl_hud_open_scoreboard
      - pl_hud_confirm
      - force_respawn
      - zgt_detach
      - zgt_roll_left
      - zgt_roll_right
      - v_move_forward
      - v_move_back
      - v_boost
      - remote_switchControl
      - remote_stopControl
      - remote_switchTarget
      - spaceship_movement_Jump_Drive_Engage_Jump
      - spaceship_movement_Jump_Drive_Request_Jump
      - spaceship_general_Flight_Systems_Ready # overwritten
    keybind_categories_to_ignore:
      - view_director_mode
      - spaceship_view
      - zero_gravity_traversal
      - player_input_optical_tracking
      - RemoteRigidEntityController
      - flycam
      - character_customizer
      - hacking # not in the game yet
      - player_choice
      - ui_notification
      - ui_textfield
      - default
      - spectator
      - IFCS_controls
      - debug
      - mapui
      - vehicle_mobiglas
    # some commands are in the category to ignore, but you want to include them
    include_actions:
      - toggle_chat
      - toggle_contact
      - pl_exit
      - pc_pit_inventory


    
    #################### KEY commands ############################### Not Implemented
    key_binding_commands: 
      - key: "f3"
        module: wingmen.star_citizen_services.uex_update_service.uex_data_runner
        class: UexDataRunnerManager
        method: transmit_commodity_prices_for_tradeport

    
    #################### VOICE COMMANDS ##############################################
    # individual commands. You specify a command and provide a mapping of which sc-commands should be executed in a row
    # This section is to make complex command chains or if you want faster response times for important action 
    commands: 
      # ──────────────────────────────────────────────────────────────────────────
      - name: ReadyForTakeOff # for individual commands, provide a good long name in camel case
        sc_commands:
          - sc_command: spaceship_movement_Request_Landing
            wait: 0.2 # seconds
          - sc_command: spaceship_power_Toggle_Power_All
            wait: 0.2
          - sc_command: spaceship_power_Toggle_Power_Thrusters 
        instant_activation:
          - Klarschiff
          - Cora, klarschiff
          - Cora, bereit für Takeoff
          - Ready for Takeoff
          - Initialisiere Abflug
          - Initialisiere Takeoff
          - Initialisiere Startsequenz
          - Cora, Initialisiere Startsequenz
          - Bereit für abflug
          - Cora, bereit für abflug
          - Abflugbereit
          - Initialize start sequence
          - Ready for Takeoff
          - Cora, prepare for takeoff
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      # ──────────────────────────────────────────────────────────────────────────
      - name: InitiatePanicDefence
        sc_commands:
          - sc_command: spaceship_defensive_Decoy_Increase_Burst_Size_tap
          - sc_command: spaceship_defensive_Decoy_Increase_Burst_Size_tap
          - sc_command: spaceship_defensive_Decoy_Increase_Burst_Size_tap
          - sc_command: spaceship_defensive_Decoy_Increase_Burst_Size_tap
          - sc_command: spaceship_defensive_Decoy_Launch_Burst_tap_Set_and_Launch_Burst_hold
          - sc_command: spaceship_defensive_Noise_Deploy_Tap
          - sc_command: spaceship_defensive_Decoy_Decrease_Burst_Size_tap
          - sc_command: spaceship_defensive_Decoy_Decrease_Burst_Size_tap
          - sc_command: spaceship_defensive_Decoy_Decrease_Burst_Size_tap
          - sc_command: spaceship_defensive_Decoy_Decrease_Burst_Size_tap
        instant_activation: 
          - Panik
          - Panik abwehr
          - Not abwehr
          - Panic defence
          - Panic
        responses: False 
      # ──────────────────────────────────────────────────────────────────────────
      - name: ShowQRCode # command do not work anymore, as console commands have changed.
        keys: 
        - key: "`" # open the console
        - key: 
          typewrite: "r_displaySessionInfo 1"
        - key: enter
        - key: "`"
        instant_activation: 
          - QR Code anzeigen
          - QR Code aktivieren
          - show QR Code
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: HideQRCode
        keys: 
        - key: "`" # open the console
        - key: 
          typewrite: "r_displaySessionInfo 0"
        - key: enter
        - key: "`"
        instant_activation: 
          - QR Code ausblenden
          - QR Code deaktivieren
          - Hide QR code
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: ShowFPSStatistics1
        keys: 
        - key: "`" # open the console
        - key: 
          typewrite: "r_displayInfo 1"
        - key: enter
        - key: "`"
        instant_activation: 
          - FPS 1 anzeigen
          - FPS eins anzeigen
          - show FPS 1
          - show FPS one
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: ShowFPSStatistics2
        keys: 
        - key: "`" # open the console
        - key: 
          typewrite: "r_displayInfo 2"
        - key: enter
        - key: "`"
        instant_activation: 
          - FPS 2 anzeigen
          - FPS zwei anzeigen
          - show FPS 2
          - show FPS two
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: ShowFPSStatistics3
        keys: 
        - key: "`" # open the console
        - key: 
          typewrite: "r_displayInfo 3"
        - key: enter
        - key: "`"
        instant_activation: 
          - FPS 3 anzeigen
          - FPS drei anzeigen
          - show FPS 3
          - show FPS three
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: HideFPSStatistics
        keys: 
        - key: "`" # open the console
        - key: 
          typewrite: "r_displayInfo 0"
        - key: enter
        - key: "`"
        instant_activation: 
          - Informationen ausblenden
          - hide information
          - FPS 0
          - FPS ausblenden
          - hide FPS
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: HelloChatTest
        keys: 
        - key: "enter" # start a chat
        - key:
          typewrite: "o7 citizens" # not working as intendet as upper keys not working and keyboard layout problematic -> my keyboard DE -> y = z
        - key: "enter"  
        instant_activation:
          - Hallo zusammen
          - Hello everyone
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      # ──────────────────────────────────────────────────────────────────────────
      - name: GetUp
        sc_commands:
          - sc_command: player_Third_Person_View_Toggle
          - sc_command: spaceship_power_Toggle_Power_Thrusters
          - sc_command: default_Exit_seat
            hold: 0.5 # as the keymapping files of some commands do not precise how to activate the action, you can individually overwrite the behaviour
        instant_activation:
          - Aufstehen
          - Get up
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      # ──────────────────────────────────────────────────────────────────────────
      - name: spaceship_radar_Activate_Ping_Hold_Release
        sc_commands:
          - sc_command: spaceship_radar_Activate_Ping_Hold_Release
        instant_activation:
          - Ping
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      # ──────────────────────────────────────────────────────────────────────────
      - name: load_missiles
        sc_commands:
          - sc_command: spaceship_missiles_Increase_Number_of_Armed_Missiles
          - sc_command: spaceship_missiles_Increase_Number_of_Armed_Missiles
        instant_activation:
          - Load missiles
          - Raketen laden
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      
      #####################  CAMERA CONTROLS #####################################
      # The camera controls are special, as you have to hold f4 to load / save views
      # ──────────────────────────────────────────────────────────────────────────
      - name: SaveStandardCameraView
        keys: 
          - key: num2
            hold: 0.5
            modifier: f4
        instant_activation:
          - Kamera auf 2 speichern
          - Standardkamera ansicht speichern
          - Standardansicht speichern
          - Landeansicht speichern
          - Rückansicht speichern
        responses: 
          - gespeichert
      # ──────────────────────────────────────────────────────────────────────────
      - name: SwitchToExternalStandardView
        keys: 
          - key: f4
          - key: KEY_NUMPAD_2
            modifier: f4
            hold: 0.01
        instant_activation:
          - Zu Außenansicht wechseln
          - Außenansicht
          - External view
          - Internal view
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      # ──────────────────────────────────────────────────────────────────────────
      - name: StandardView
        keys: 
          - key: KEY_NUMPAD_2
            modifier: f4
            hold: 0.01
        instant_activation:
          - Landeansicht
          - Standardsicht
          - Rückansicht
          - Rear view
          - Standard view
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      # ──────────────────────────────────────────────────────────────────────────
      - name: SaveCameraViewFront
        keys: 
          - key: KEY_NUMPAD_8
            hold: 0.5
            modifier: f4
        instant_activation:
          - Kamera auf 8 speichern
          - Vorderansicht speichern
          - Save front view
        responses: 
          - gespeichert
      # ──────────────────────────────────────────────────────────────────────────
      - name: ViewFront
        keys: 
          - key: KEY_NUMPAD_8
            modifier: f4
            hold: 0.01
        instant_activation:
          - Vorderansicht
          - Front view
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      # ──────────────────────────────────────────────────────────────────────────
      - name: SaveCameraViewUp
        keys: 
          - key: KEY_NUMPAD_5
            modifier: f4
            hold: 0.5
        instant_activation:
          - Kamera auf 5 speichern
          - Obensicht speichern
          - Save Top view
        responses: 
          - gespeichert
      # ──────────────────────────────────────────────────────────────────────────
      - name: ViewUp
        keys: 
          - key: KEY_NUMPAD_5
            modifier: f4
            hold: 0.01
        instant_activation:
          - Kamera 5
          - Obensicht
          - Sicht von oben
          - Top view
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: SaveCameraViewLeft
        keys: 
          - key: KEY_NUMPAD_4
            hold: 0.5
            modifier: f4
        instant_activation:
          - Kamera auf 4 speichern
          - Backbord sicht speichern
          - Links sicht speichern
          - Save left view
        responses: 
          - gespeichert
      # ──────────────────────────────────────────────────────────────────────────
      - name: ViewLeft
        keys: 
          - key: KEY_NUMPAD_4
            modifier: f4
            hold: 0.01
        instant_activation:
          - Backbord sicht
          - Sicht von Links
          - Linkssicht
          - left view
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      # ──────────────────────────────────────────────────────────────────────────
      - name: SaveCameraViewRight
        keys: 
          - key: KEY_NUMPAD_6
            hold: 0.5
            modifier: f4
        instant_activation:
          - Kamera auf 6 speichern
          - Steuerbord sicht speichern
          - Rechtssicht speichern
          - Save right view
        responses: 
          - gespeichert
      # ──────────────────────────────────────────────────────────────────────────
      - name: ViewRight
        keys: 
          - key: KEY_NUMPAD_6
            modifier: f4
            hold: 0.01
        instant_activation:
          - Steuerbord sicht
          - Sicht von rechts
          - rechtssicht
          - right view
        responses: False # If you don't want the ai to acknowledge an instant_activation you can set this to false
      # ──────────────────────────────────────────────────────────────────────────
      #####################  RADEON Commands #####################################
      # ──────────────────────────────────────────────────────────────────────────
      - name: OpenRadeon
        keys: # You can have multiple keys per command!
        - key: r
          modifiers: alt,shift,ctrl
        instant_activation: 
          - Öffne Radeon
          - Öffne Graphikkarte
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: InstantReplay
        keys: # You can have multiple keys per command!
        - key: s
          modifiers: alt,shift,ctrl
        instant_activation: 
          - Instant Replay
          - Aufnahme speichern
          - Sofortaufnahme
        responses: 
          - Aufnahme wird gespeichert
      # ──────────────────────────────────────────────────────────────────────────
      - name: InstantGif
        keys: # You can still specify own key strokes
        - key: j
          modifiers: alt,shift,ctrl
        instant_activation: 
          - Instant Gif
          - Gif speichern
        responses: 
          - Gif Aufnahme wird gespeichert 
      # ──────────────────────────────────────────────────────────────────────────
      - name: ToggleScreenCapture
        keys: # You can still specify own key strokes
        - key: e
          modifiers: alt,shift,ctrl
        instant_activation: 
          - Aufnahme starten
          - Aufnahme stoppen
          - Aufzeichnung starten
          - Aufzeichnung stoppen
          - Aufnehmen
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: TakeScreenshot
        keys: # You can still specify own key strokes
        - key: i
          modifiers: alt,shift,ctrl
        instant_activation: 
          - Screenshot
          - Bildschirmfoto
        responses: False
      # ──────────────────────────────────────────────────────────────────────────
      - name: Mute_Unmute_Radeon_Microphone
        keys: # You can still specify own key strokes
        - key: m
          modifiers: alt,shift,ctrl
        instant_activation: 
          - Sprache aufzeichnen
          - Sprache nicht aufzeichnen
          - Sprache aufnehmen
          - Sprache nicht aufnehmen
          - Radeon Mikrofon stummschalten
          - Radeon Mikrofon aktivieren
          - Voice aufzeichnen
          - Voice nicht aufzeichnen
        responses: False        
      #####################  Discord Commands #####################################
      # ──────────────────────────────────────────────────────────────────────────
      - name: ToggleMuteMicrofoneDiscord
        keys: # You can still specify own key strokes
        - key: home
          modifiers: altright
        instant_activation: 
          - Mute Discord
          - Discord Stummschalten
          - Discord aktivieren
          - Unmute Discord
        responses: False     